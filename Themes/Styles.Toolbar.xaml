<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

	<!-- Softer, more readable toolbar controls -->
	<!-- Tuning knobs -->
	<CornerRadius x:Key="TbRadius">18</CornerRadius>
	<!-- daha yuvarlak -->
	<Thickness    x:Key="TbPad">12,6</Thickness>
	<!-- daha geniş iç boşluk -->
	<sys:Double   x:Key="TbFontSize">13</sys:Double>
	<FontWeight   x:Key="TbFontWeight">SemiBold</FontWeight>

	<!-- Shared focus ring -->
	<Style x:Key="TbFocusDecorator" TargetType="{x:Type Border}">
		<Setter Property="CornerRadius" Value="{StaticResource TbRadius}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TbBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Style.Triggers>
			<Trigger Property="Tag" Value="focus">
				<Setter Property="BorderThickness" Value="2"/>
				<Setter Property="BorderBrush" Value="{DynamicResource TbChecked}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

	<!-- Base template for Button/Toggle/Radio -->
	<ControlTemplate x:Key="TbBaseTemplate" TargetType="{x:Type ContentControl}">
		<Grid SnapsToDevicePixels="True">
			<!-- Focus ring -->
			<Border x:Name="focus" Style="{StaticResource TbFocusDecorator}" Opacity="0"/>
			<!-- Surface -->
			<Border x:Name="bd"
					CornerRadius="{StaticResource TbRadius}"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="1"/>
			<ContentPresenter Margin="{TemplateBinding Padding}"
							  HorizontalAlignment="Center" VerticalAlignment="Center"
							  RecognizesAccessKey="True"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsKeyboardFocused" Value="True">
				<Setter TargetName="focus" Property="Opacity" Value="1"/>
				<Setter TargetName="focus" Property="Tag" Value="focus"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<!-- BUTTON -->
	<Style x:Key="ToolbarButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FontSize"   Value="{StaticResource TbFontSize}"/>
		<Setter Property="FontWeight" Value="{StaticResource TbFontWeight}"/>
		<Setter Property="Foreground" Value="{DynamicResource TbFg}"/>
		<Setter Property="Background" Value="{DynamicResource TbBg}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TbBorder}"/>
		<Setter Property="Padding" Value="{StaticResource TbPad}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ContentControl Template="{StaticResource TbBaseTemplate}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									Padding="{TemplateBinding Padding}">
						<ContentControl.Content>
							<ContentPresenter ContentSource="Content"/>
						</ContentControl.Content>
					</ContentControl>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource TbHover}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource TbPressed}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource TbDisabledFg}"/>
							<Setter Property="Background" Value="{DynamicResource TbDisabledBg}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TOGGLE -->
	<Style x:Key="ToolbarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="FontSize"   Value="{StaticResource TbFontSize}"/>
		<Setter Property="FontWeight" Value="{StaticResource TbFontWeight}"/>
		<Setter Property="Foreground" Value="{DynamicResource TbFg}"/>
		<Setter Property="Background" Value="{DynamicResource TbBg}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TbBorder}"/>
		<Setter Property="Padding" Value="{StaticResource TbPad}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ContentControl Template="{StaticResource TbBaseTemplate}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									Padding="{TemplateBinding Padding}">
						<ContentControl.Content>
							<ContentPresenter ContentSource="Content"/>
						</ContentControl.Content>
					</ContentControl>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource TbHover}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource TbChecked}"/>
							<Setter Property="Foreground" Value="{DynamicResource TbCheckedFg}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource TbDisabledFg}"/>
							<Setter Property="Background" Value="{DynamicResource TbDisabledBg}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- RADIO (pill) -->
	<Style x:Key="ToolbarRadioStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="FontSize"   Value="{StaticResource TbFontSize}"/>
		<Setter Property="FontWeight" Value="{StaticResource TbFontWeight}"/>
		<Setter Property="Foreground" Value="{DynamicResource TbFg}"/>
		<Setter Property="Background" Value="{DynamicResource TbBg}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TbBorder}"/>
		<Setter Property="Padding" Value="{StaticResource TbPad}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<ContentControl Template="{StaticResource TbBaseTemplate}"
									Background="{TemplateBinding Background}"
									BorderBrush="{TemplateBinding BorderBrush}"
									Padding="{TemplateBinding Padding}">
						<ContentControl.Content>
							<ContentPresenter ContentSource="Content"/>
						</ContentControl.Content>
					</ContentControl>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource TbHover}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource TbChecked}"/>
							<Setter Property="Foreground" Value="{DynamicResource TbCheckedFg}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource TbDisabledFg}"/>
							<Setter Property="Background" Value="{DynamicResource TbDisabledBg}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>
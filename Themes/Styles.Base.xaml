<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Base button style used across the app -->
    <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background"      Value="{DynamicResource BtnBg}"/>
        <Setter Property="Foreground"      Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush"     Value="{DynamicResource Divider}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding"         Value="10,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5">
                        <Border.Effect>
                            <DropShadowEffect Color="#99000000" BlurRadius="4" ShadowDepth="2"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BtnHover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource BtnPressed}"/>
                            <Setter TargetName="Bd" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="#66000000" BlurRadius="2" ShadowDepth="0"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource TbDisabledBg}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TbDisabledFg}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Apply base style to all buttons and toggle buttons -->
    <Style TargetType="{x:Type Button}"       BasedOn="{StaticResource BaseButtonStyle}"/>
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseButtonStyle}"/>

    <!-- Basic input controls -->
    <Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="Background"  Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="Foreground"  Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Divider}"/>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
        <Setter Property="Background" Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectionBg}"/>
                <Setter Property="Foreground" Value="{DynamicResource SelectionFg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="{DynamicResource OnSurface}"/>
    </Style>

    <!-- Tab styling matching the current theme -->
    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
        <Setter Property="Background"  Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="Foreground"  Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Divider}"/>
    </Style>

    <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource {x:Type TabItem}}">
        <Setter Property="Background"      Value="{DynamicResource SurfaceAlt}"/>
        <Setter Property="Foreground"      Value="{DynamicResource OnSurface}"/>
        <Setter Property="BorderBrush"     Value="{DynamicResource Divider}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding"         Value="10,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter ContentSource="Header"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource SelectionBg}"/>
                <Setter Property="Foreground" Value="{DynamicResource SelectionFg}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>

